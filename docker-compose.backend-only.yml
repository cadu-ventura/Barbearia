version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: barbearia-postgres
    environment:
      POSTGRES_DB: barbearia_hoshirara
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - barbearia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: barbearia-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - TOKEN_SECRET=barbearia#2025$jwt@secret%token&12345*random%chars!@#$%^&*()
      - TOKEN_EXPIRATION=24h
      - DATABASE_URL=postgres://postgres:postgres123@postgres:5432/barbearia_hoshirara
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - barbearia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  barbearia-network:
    driver: bridge

volumes:
  postgres_data: